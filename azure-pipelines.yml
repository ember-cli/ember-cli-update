trigger:
- master

jobs:
- job: Windows
  timeoutInMinutes: 15
  strategy:
    matrix:
      # Node6:
      #   nodejs_version: "6"
      Node8:
        nodejs_version: "8"
    maxParallel: 2
  
  pool:
    vmImage: vs2017-win2016

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(nodejs_version)

  - powershell: |
      npm config set spin false
      npm install
    displayName: Install

  - script: |
      node --version
      call npm --version
      call npm run test:bin -- --reporter=xunit --reporter-options output=results-bin.xml
      call npm run test:command -- --reporter=xunit --reporter-options output=results-command.xml
    displayName: Test
    continueOnError: true
    enabled: false

  - script: |
      call npm run test:acceptance -- --reporter=xunit --reporter-options output=results-acceptance.xml
    displayName: Test:acceptance
    continueOnError: true
  
  - bash: |
      cat C:\npm\cache\_logs\*.log
    displayName: Show npm logs
    continueOnError: true

  - script: |
      call npm run test:integration -- --reporter=xunit --reporter-options output=results-integration.xml
    displayName: Test:integration
    continueOnError: true
    enabled: false

  - script: |
      call npm run test:unit -- --reporter=xunit --reporter-options output=results-unit.xml
    displayName: Test:unit
    continueOnError: true
    enabled: false

  - task: PublishTestResults@2
    displayName: Publish Tests Results
    inputs:
      testResultsFiles: 'results-*.xml'
      testResultsFormat: XUnit
      searchFolder: '$(Build.SourcesDirectory)'
    condition: succeededOrFailed()

# - job: Linux
#   strategy:
#     matrix:
#       Node6:
#         nodejs_version: "6"
#       Node8:
#         nodejs_version: "8"
#     maxParallel: 2

#   pool:
#     vmImage: ubuntu-16.04

#   steps:
#   - task: NodeTool@0
#     inputs:
#       versionSpec: $(nodejs_version)

#   - bash: |
#       npm config set spin false
#       npm install
#     displayName: Install

#   - script: |
#       node --version
#       npm --version
#       npm run test:bin -- --reporter=xunit --reporter-options output=results-bin.xml
#       npm run test:command -- --reporter=xunit --reporter-options output=results-command.xml
#     displayName: Test
#     continueOnError: true

#   - task: PublishTestResults@2
#     displayName: Publish Tests Results
#     inputs:
#       testResultsFiles: 'results-*.xml'
#       testResultsFormat: XUnit
#       searchFolder: '$(Build.SourcesDirectory)'
#     condition: succeededOrFailed()
